@model NetProject.Models.WorkOrder
@{
    ViewData["Title"] = "Szczegóły zlecenia";
    var totalLabor = Model.ServiceTasks.Sum(t => t.LaborCost);
    var totalParts = Model.ServiceTasks.SelectMany(t => t.ServiceTaskParts).Sum(p => p.Part.UnitPrice * p.Quantity);
    var total = totalLabor + totalParts;
}

<h1>@ViewData["Title"] — Zlecenie #@Model.Id</h1>

<p><strong>Klient:</strong> @Model.Customer.FullName</p>
<p><strong>Pojazd:</strong> @Model.Vehicle.Make @Model.Vehicle.Model</p>
<p><strong>Mechanik:</strong> @Model.AssignedMechanic?.UserName</p>
<p><strong>Status:</strong> @Model.Status</p>
<p><strong>Opis:</strong> @Model.Description</p>

<hr />
<h4>Czynności serwisowe</h4>
<table class="table">
    <thead><tr><th>Nazwa</th><th>Koszt robocizny</th><th>Części</th><th>Koszt części</th><th>Akcje</th></tr></thead>
    <tbody>
    @foreach (var t in Model.ServiceTasks)
    {
        var czesci = t.ServiceTaskParts;
        var sumaCzesci = czesci?.Sum(p => p.Part.UnitPrice * p.Quantity) ?? 0;
        <tr>
            <td>@t.Name</td>
            <td>@t.LaborCost zł</td>
            <td>
                @if (czesci != null && czesci.Any())
                {
                    <ul>
                    @foreach (var p in czesci)
                    {
                        <li>@p.Part.Name x @p.Quantity = @(p.Part.UnitPrice * p.Quantity) zł</li>
                    }
                    </ul>
                }
            </td>
            <td>@sumaCzesci zł</td>
            <td>
                <a asp-controller="ServiceTasks" asp-action="AddPart" asp-route-serviceTaskId="@t.Id" class="btn btn-sm btn-secondary">Dodaj część</a>
                <a asp-controller="ServiceTasks" asp-action="Edit" asp-route-id="@t.Id" class="btn btn-sm btn-warning">Edytuj</a>
                <a asp-controller="ServiceTasks" asp-action="Delete" asp-route-id="@t.Id" class="btn btn-sm btn-danger">Usuń</a>
            </td>

        </tr>
    }
    </tbody>
</table>

<p><strong>Suma całkowita (robocizna + części):</strong> @total zł</p>

@if (User.IsInRole("Mechanik") || User.IsInRole("Admin"))
{
    <a asp-controller="ServiceTasks"
       asp-action="Create"
       asp-route-workOrderId="@Model.Id"
       class="btn btn-sm btn-success">Dodaj czynność</a>
}

<hr />

@if (User.IsInRole("Mechanik") || User.IsInRole("Admin"))
{
    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">Edytuj zlecenie</a>
}

<hr />
<h4>Komentarze</h4>
@if (!Model.Comments.Any())
{
    <p>Brak komentarzy.</p>
}
else
{
    <ul class="list-group mb-3">
        @foreach (var c in Model.Comments.OrderBy(c => c.CreatedAt))
        {
            <li class="list-group-item">
                <strong>@c.Author.UserName</strong>
                <span class="text-muted">(@c.CreatedAt:yyyy-MM-dd HH:mm)</span>
                <p>@c.Content</p>
            </li>
        }
    </ul>
}

@if (User.Identity?.IsAuthenticated ?? false)
{
    <form asp-controller="WorkOrderComments"
          asp-action="Create"
          method="post">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="Id" value="@Model.Id" name="WorkOrderId" />
        <div class="mb-3">
            <label for="Content" class="form-label">Twój komentarz:</label>
            <textarea name="Content" class="form-control" rows="3" required maxlength="1000"></textarea>
        </div>
        <button type="submit" class="btn btn-primary">Dodaj komentarz</button>
    </form>
}
else
{
    <p class="text-muted">Musisz się <a asp-area="Identity" asp-page="/Account/Login">zalogować</a>, aby komentować.</p>
}

<a asp-action="Index" class="btn btn-secondary">Powrót do listy</a>
